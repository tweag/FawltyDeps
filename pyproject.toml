[tool.poetry]
name = "fawltydeps"
version = "0.13.2"
description = "Find undeclared and unused 3rd-party dependencies in your Python project."
authors = [
    "Maria Knorps <maria.knorps@tweag.io>",
    "Nour El Mawass <nour.elmawass@tweag.io>",
    "Johan Herland <johan.herland@tweag.io>",
    "Vince Reuter <vince.reuter@tweag.io>",
    "Zhihan Zhang <zhihan.zhang@tweag.io>",
]
readme = "README.md"
license = "MIT"
repository = "https://github.com/tweag/FawltyDeps"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Quality Assurance",
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Utilities",
    "Typing :: Typed",
]

[tool.poetry.scripts]
fawltydeps = "fawltydeps.main:main"

[tool.poetry.dependencies]
# These are the main dependencies for fawltydeps at runtime.
# Do not add anything here that is only needed by CI/tests/linters/developers
python = "^3.7.2"
importlib_metadata = "=6.6.0"
isort = [
    # isort 5.12.0 drops support for Python v3.7:
    {version = "^5.10", python = ">=3.8"},
    {version = ">=5.10,<5.12.0", python = "<3.8"},
]
pip-requirements-parser = "^32.0.1"
pydantic = ">=1.10.4,<3.0.0"
tomli = {version = "^2.0.1", python = "<3.11"}
typing-extensions = {version = "^4.4.0", python = "<3.8"}
setuptools = "^68.0.0"

[tool.poetry.group.nox]
optional = true

[tool.poetry.group.nox.dependencies]
nox = "^2022.11.21"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
hypothesis = "^6.68.2"
pytest = "^7.1.0"

[tool.poetry.group.lint]
optional = true

[tool.poetry.group.lint.dependencies]
hypothesis = "^6.68.2"
mypy = "^1.0.1"
nox = "^2022.11.21"
pylint = [
    # pylint v3.0.0 drops support for Python v3.7:
    {version = "^3", python = ">=3.8"},
    {version = "^2.15.8", python = "<3.8"},
]
pytest = "^7.1.0"
types-setuptools = "^65.6.0.2"

[tool.poetry.group.format]
optional = true

[tool.poetry.group.format.dependencies]
black = {version = "^22", extras = ["colorama"]}
isort = [
    # isort 5.12.0 drops support for Python v3.7:
    {version = "^5.10", extras = ["colors"], python = ">=3.8"},
    {version = ">=5.10,<5.12.0", extras = ["colors"], python = "<3.8"},
]
codespell = "^2.2.4"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
# The dev group is a convenience group for FawltyDeps developers. When adding
# something to the above groups (i.e. something that targets a specific purpose
# (e.g. a CI action), consider whether it's also useful to have this available
# in a developers environment
black = {version = "^22", extras = ["colorama"]}
codespell = "^2.2.4"
hypothesis = "^6.68.2"
mypy = "^1.0.1"
nox = "^2022.11.21"
pylint = [
    # pylint v3.0.0 drops support for Python v3.7:
    {version = "^3", python = ">=3.8"},
    {version = "^2.15.8", python = "<3.8"},
]
pytest = "^7.1.0"
types-setuptools = "^65.6.0.2"

[tool.black]
target-version = ["py37"]

[tool.isort]
profile = "black"

[tool.pylint]
main.jobs = 4
main.py-version = "3.7"
reports.output-format = "colorized"
"messages control".disable = "fixme,logging-fstring-interpolation,unspecified-encoding,too-few-public-methods,consider-using-in,duplicate-code"

[tool.mypy]
files = ['*.py', 'fawltydeps/*.py', 'tests/*.py']
plugins = ["pydantic.mypy"]
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = "fawltydeps.*"
disallow_untyped_defs = true
disallow_untyped_calls = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_any_unimported = true
disallow_any_explicit = true
disallow_any_generics = true
disallow_subclassing_any = true
implicit_optional = false
strict_optional = true

[tool.pytest.ini_options]
minversion = 7.0
markers = [
    "integration: marks integration tests (disabled by default, enable with '-m integration')",
]
addopts = "-m 'not integration'"
cache_dir = "~/.cache/pytest"

[tool.codespell]
skip = ".git,.mypy_cache,.nox,.vscode,__pycache__,poetry.lock"
builtin = "clear,rare,informal,usage,code,names"
ignore-words-list = "jupyter,iff"  # prevent jupyter -> jupiter, iff -> if
check-filenames = true
uri-ignore-words-list = "*"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.fawltydeps]
code = ["fawltydeps"]
deps = ["pyproject.toml"]
ignore_unused = [
    "black",
    "codespell",
    "hypothesis",
    "mypy",
    "nox",
    "pylint",
    "pytest",
]
