[project]
# General information about a simplified project: Its name, why we test it,
# its relation to real world projects
name = "hidden_files_win"
description = """
    A project with code/deps in hidden files and inside hidden dirs, as well as
    pyenvs that are inside hidden dirs (one of them being a hidden dir itself)
"""
windows_only = true

[experiments.default]
description = "Default run where everything is hidden."
pyenvs = [""]  # Find all Python environments in project

# 3rd-party imports found in the code:
imports = []

# Declared dependencies found in the project configuration:
declared_deps = []

# Import names in the code that do not have a matching dependency declared:
undeclared_deps = []

# Declared dependencies which were never `import`ed from the code:
unused_deps = []

[experiments.exclude_nothing]
description = "Run without excludes - everything is found."
pyenvs = [""]  # Find all Python environments in project
exclude = []  # No default excludes

# 3rd-party imports found in the code:
imports = [
    "module_a",  # .hidden.code.py
    "module_b",  # .hidden_dir/code.py
]

# Declared dependencies found in the project configuration:
declared_deps = [
    "package_x",  # .hidden.requirements.txt
    "package_y",  # .hidden_dir/requirements.txt
]

# Import names in the code that do not have a matching dependency declared:
undeclared_deps = [
    "module_a",  # .hidden.code.py
    "module_b",  # .hidden_dir/code.py
]

# Declared dependencies which were never `import`ed from the code:
unused_deps = [
    "package_x",  # .hidden.requirements.txt
    "package_y",  # .hidden_dir/requirements.txt
]

[experiments.exclude_some_things]
description = "Run with custom exclude pattern instead of default."
pyenvs = [""]  # Find all Python environments in project
exclude = [".hidden_dir/"]  # Only exclude .hidden_dir/

# 3rd-party imports found in the code:
imports = [
    "module_a",  # .hidden.code.py
]

# Declared dependencies found in the project configuration:
declared_deps = [
    "package_x",  # .hidden.requirements.txt
]

# Import names in the code that do not have a matching dependency declared:
undeclared_deps = [
    "module_a",  # .hidden.code.py
]

# Declared dependencies which were never `import`ed from the code:
unused_deps = [
    "package_x",  # .hidden.requirements.txt
]
