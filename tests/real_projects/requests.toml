[project]
# General information about the 3rd-party project: Its name, why we test it,
# and where to find the relevant tarball, along with its expected checksum.
name = "requests"
description = "A very popular package with several dependencies."
url = "https://github.com/psf/requests/archive/refs/tags/v2.28.2.tar.gz"
sha256 = "375d6bb6b73af27c69487dcf1df51659a8ee7428420caff21253825fb338ce10"
# The SHA256 checksum above can be found by running `sha256sum` on the
# downloaded tarball. It is used to ensure that we run tests against the
# expected revision of the 3rd-party project.

# Below are our expectations for running FawltyDeps on the above (unpacked)
# tarball. Each table represents the expectations of a corresponding test case
# inside ../test_real_projects.py. All tables are optional: Removing a table
# will disable the corresponding test case. An empty table means that we expect
# FawltyDeps to produce zero results/empty output for that test.
#
# Inside each table, we map filenames to lists of relevant packages (imports or
# dependencies) that we expect FawltyDeps to return for that test. This is
# described in more detail under each table:

[imports]
# What we expect `fawltydeps --list-imports` to return for this project.
# Key: filename containing import statements
# Value: list (set) of external packages imported
# TODO: Analyze requests properly
"<unused>" = [
    "BaseHTTPServer",
    "certifi",
    "chardet",
    "charset_normalizer",
    "cryptography",
    "cStringIO",
    "idna",
    "OpenSSL",
    "pygments",
    "pytest",
    "requests",
    "setuptools",
    "SimpleHTTPServer",
    "simplejson",
    "StringIO",
    "trustme",
    "urllib3",
]

[declared_deps]
# What we expect `fawltydeps --list-deps` to return for this project.
# Key: filename containing declared dependencies
# Value: list (set) of packages names that are declared
# TODO: Analyze requests properly
"<unused>" =  ["chardet", "pysocks", "sphinx"]

[undeclared_deps]
# What we expect `fawltydeps --check-undeclared` to return for this project.
# Key: filename containing import statements
# Value: list (set) of external packages imported without being declared
# TODO: Analyze requests properly
"<unused>" = [
    "BaseHTTPServer",
    "certifi",
    "charset_normalizer",
    "cryptography",
    "cStringIO",
    "idna",
    "OpenSSL",
    "pygments",
    "pytest",
    "requests",
    "setuptools",
    "SimpleHTTPServer",
    "simplejson",
    "StringIO",
    "trustme",
    "urllib3",
]

[unused_deps]
# What we expect `fawltydeps --check-unused` to return for this project.
# Key: filename containing declared dependencies
# Value: list (set) of external packages imported
# TODO: Analyze requests properly
"<unused>" =  ["pysocks", "sphinx"]
