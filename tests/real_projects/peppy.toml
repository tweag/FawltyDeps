[project]
# General information about the 3rd-party project: Its name, why we test it,
# and where to find the relevant tarball, along with its expected checksum.
name = "peppy"
description = ""
url = "https://files.pythonhosted.org/packages/6b/ba/dc5a705d156b29207728307770db10ea9263eb8cf3ab8460aea55fac506c/peppy-0.35.4.tar.gz"
sha256 = "04338a1b53852c1b30d84d9d333185485725b0097462045397f84c721bab59cd"
# The SHA256 checksum above can be found by running `sha256sum` on the
# downloaded tarball. It is used to ensure that we run tests against the
# expected revision of the 3rd-party project.

# Below are our experiments that run FawltyDeps with various options on the
# above (unpacked) tarball. Each table represents an experiment with our
# expectations for what FawltyDeps should return in that scenario.
#
# Inside each table, we list out expectations of imports, declared_deps,
# undeclared_deps, and unused_deps inside the JSON produced by FawltyDeps.
# All these fields are optinal, and the comparison will be skipped for missing
# fields.

[experiments.all]
description = "Running FD on the entire peppy project"
args = []
imports = [
    "attmap",
    "numpy",
    "pandas",
    "pytest",
    "rich",
    "setuptools",
    "ubiquerg",
    "yaml"
]

declared_deps = [
    "attmap",
    "logmuse",
    "markdown-include",
    "mkdocs",
    "mock",
    "pandas",
    "peppy",  # Declared in ./requirements/requirements-doc.txt
    "pydoc-markdown",
    "pytest",
    "pytest-cov",
    "pytest-remotedata",
    "rich",
    "ubiquerg", 
    "pyyaml"
]

undeclared_deps = [
    "numpy", 
    "yaml",
    "setuptools"
]

unused_deps = [
    "logmuse", 
    "markdown-include",
    "mkdocs",
    "mock",
    "peppy",  # Declared in ./requirements/requirements-doc.txt
    "pydoc-markdown",
    "pytest-cov",
    "pytest-remotedata",
    "pyyaml"
]
